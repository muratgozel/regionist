{"version":3,"file":"index.js","sources":["../../../src/Regionist.js"],"sourcesContent":["import jstz from 'locale-util/data/jstz/index.js'\nimport timezones from 'locale-util/data/extra/timezonesByCountry.json'\nimport countryLanguages from 'locale-util/data/extra/countryOfficialLanguages.json'\nimport callingCodes from 'locale-util/data/core/phoneNumberMetadata.json'\nimport currencyCodes from 'locale-util/data/extra/currencyCodesByCountry.json'\nimport store from 'store/dist/store.modern.js'\n\nclass Regionist {\n  #browserLocaleLikes = []\n  #localStorageIdentifier = '_regionist'\n  #reLocale = /[a-z]{2,3}((-|_)[a-zA-Z]{2})?/\n  #prev = null\n\n  constructor(params={}) {\n    this.timezone = params.timezone || null\n    this.country = params.country || null\n    this.nativeLanguage = params.nativeLanguage || null\n    this.preferredLanguage = params.preferredLanguage || null\n    this.locale = params.locale || null\n    this.callingCode = params.callingCode || null\n    this.currencyCode = params.currencyCode || null\n  }\n\n  guess(opts={remember: false}) {\n    this.#browserLocaleLikes = this.generateLocaleLikesFromNavigator()\n    this.timezone = this.guessTimezone()\n    this.country = this.guessCountry()\n    this.nativeLanguage = this.findNativeLanguage()\n    this.preferredLanguage = this.findPreferredLanguage()\n    this.locale = this.constructLocale()\n    this.callingCode = this.findCallingCode()\n    this.currencyCode = this.findCurrencyCode()\n\n    if (opts.remember) {\n      this.#prev = new Regionist( store.get(this.#localStorageIdentifier) )\n      store.set(this.#localStorageIdentifier, Object.keys(this).reduce((m, k) => m[k]=this[k], {}))\n    }\n\n    return this\n  }\n\n  isCountryChanged() {\n    return this.#prev.country != this.country && typeof this.country == 'string'\n  }\n\n  isTimezoneChanged() {\n    return this.#prev.timezone != this.timezone && typeof this.timezone == 'string'\n  }\n\n  findCurrencyCode() {\n    if (!this.country) return null;\n    if (!currencyCodes.hasOwnProperty(this.country)) return null;\n\n    return currencyCodes[this.country]\n  }\n\n  findCallingCode() {\n    if (!this.country) return null;\n    if (!callingCodes.hasOwnProperty(this.country)) return null;\n\n    return callingCodes[this.country]\n  }\n\n  constructLocale() {\n    return this.nativeLanguage + '_' + this.country\n  }\n\n  findPreferredLanguage() {\n    const languagesWithinhNavigator = this.#browserLocaleLikes.map(l => l.slice(0, 2))\n\n    if (languagesWithinhNavigator.length === 0) return null;\n\n    return languagesWithinhNavigator[0]\n  }\n\n  findNativeLanguage() {\n    const languagesWithinhNavigator = this.#browserLocaleLikes.map(l => l.slice(0, 2))\n\n    if (languagesWithinhNavigator.length === 0) return null;\n    if (!this.country) languagesWithinhNavigator[0]\n\n    const languagesWithinCountry = countryLanguages[this.country]\n\n    // the most suitable candidate for the native language is\n    // the language from navigator found in languagesWithinCountry\n    const possibleNativeLanguages = languagesWithinhNavigator\n      .filter(l => languagesWithinCountry.indexOf(l) !== -1)\n    if (possibleNativeLanguages && possibleNativeLanguages.length > 0) {\n      return possibleNativeLanguages[0]\n    }\n\n    // just return primary official language\n    return languagesWithinCountry[0]\n  }\n\n  guessCountry() {\n    // guess based on timezone first\n    let countriesWithinSameTimezone = []\n    if (this.timezone) {\n      const tz = this.timezone.toLowerCase()\n      countriesWithinSameTimezone = Object.keys(timezones).filter(country => {\n        const m = timezones[country].filter(_tz => _tz.toLowerCase() == tz)\n        return m && m.length > 0\n      })\n      // if there is only one just return it, we trust timezone\n      if (countriesWithinSameTimezone.length === 1) {\n        return countriesWithinSameTimezone[0]\n      }\n    }\n\n    // guess based on navigator\n    const countriesWithinNavigator = this.#browserLocaleLikes\n      .filter(l => l.indexOf('_') !== -1)\n      .map(l => l.split('_')[1])\n    \n    if (countriesWithinSameTimezone.length === 0 && countriesWithinNavigator.length > 0) {\n      return countriesWithinNavigator[0]\n    }\n\n    if (countriesWithinSameTimezone.length > 0 && countriesWithinNavigator.length === 0) {\n      // just throw first country\n      return countriesWithinSameTimezone[0]\n    }\n\n    if (countriesWithinSameTimezone.length === 0 && countriesWithinNavigator.length === 0) {\n      // impossible to guess\n      return null\n    }\n\n    const countryMatches = countriesWithinSameTimezone\n      .filter(country => countriesWithinNavigator.indexOf(country) !== -1)\n    if (countryMatches && countryMatches.length > 0) {\n      return countryMatches[0]\n    }\n\n    return countriesWithinSameTimezone[0]\n  }\n\n  guessTimezone() {\n    try {\n      return Intl.DateTimeFormat().resolvedOptions().timeZone\n    } catch (error) {\n      // Intl not supported, try jstz\n      return jstz.determine().name()\n    }\n  }\n\n  generateLocaleLikesFromNavigator() {\n    let result = []\n\n    if (!('navigator' in window)) return result\n\n    const n = window.navigator\n    if (('languages' in n) && n.languages && n.languages.length > 0) result = n.languages\n    else if (n.language) result = [n.language]\n    else if (n.userLanguage) result = [n.userLanguage]\n    else return result\n\n    return this.formatLocaleLike(result)\n  }\n\n  formatLocaleLike(value) {\n    value = Array.isArray(value) ? value : [value]\n\n    return value\n      .filter(v => {\n        return typeof v == 'string' && this.#reLocale.test(v)\n      })\n      .map(v => {\n        const arr = v.split(/(_|-)/)\n\n        if (arr.length === 1) {\n          return arr[0].toLowerCase()\n        }\n\n        if (arr.length === 3) {\n          return arr[0].toLowerCase() + '_' + arr[2].toUpperCase()\n        }\n\n        return arr[0].toLowerCase()\n      })\n  }\n\n  // picks the best language/locale from a given list\n  pick(localeLikes=[]) {\n    localeLikes = this.formatLocaleLike(localeLikes)\n    \n    // match by order + locale + country + language\n    const matches1 = localeLikes.filter(l => this.locale == l)\n    if (matches1 && matches1.length > 0) return matches1[0]\n\n    const matches2 = localeLikes.filter(l => {\n      const arr = l.split('_')\n      const country = arr.length === 2 ? arr[1] : null\n      if (country && country == this.country) return true;\n      return false\n    })\n    if (matches2 && matches2.length > 0) return matches2[0]\n\n    const matches3 = localeLikes.filter(l => {\n      const arr = l.split('_')\n      const lang = arr[0]\n      const langMatch = lang == this.nativeLanguage || lang == this.preferredLanguage\n      if (langMatch) return true;\n      return false\n    })\n    if (matches3 && matches3.length > 0) return matches3[0]\n\n    return localeLikes[0]\n  }\n}\n\nconst regionist = new Regionist()\n\nexport {regionist, currencyCodes, callingCodes, countryLanguages, timezones} "],"names":["Regionist","params","timezone","country","nativeLanguage","preferredLanguage","locale","callingCode","currencyCode","opts","remember","generateLocaleLikesFromNavigator","guessTimezone","guessCountry","findNativeLanguage","findPreferredLanguage","constructLocale","findCallingCode","findCurrencyCode","store","get","set","_reduceInstanceProperty","m","k","_classPrivateFieldGet","currencyCodes","hasOwnProperty","callingCodes","languagesWithinhNavigator","_mapInstanceProperty","l","_sliceInstanceProperty","length","languagesWithinCountry","countryLanguages","possibleNativeLanguages","_filterInstanceProperty","_indexOfInstanceProperty","countriesWithinSameTimezone","tz","toLowerCase","timezones","_tz","countriesWithinNavigator","split","countryMatches","Intl","DateTimeFormat","resolvedOptions","timeZone","error","jstz","determine","name","result","window","n","navigator","languages","language","userLanguage","formatLocaleLike","value","Array","isArray","v","test","arr","toUpperCase","localeLikes","matches1","matches2","matches3","lang","langMatch","regionist"],"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"}