{"version":3,"file":"index.js","sources":["../../../src/Regionist.js"],"sourcesContent":["import jstz from 'locale-util/data/jstz/index.js'\nimport timezones from 'locale-util/data/extra/timezonesByCountry.json'\nimport countryLanguages from 'locale-util/data/extra/countryOfficialLanguages.json'\nimport callingCodes from 'locale-util/data/core/phoneNumberMetadata.json'\nimport currencyCodes from 'locale-util/data/extra/currencyCodesByCountry.json'\nimport store from 'store/dist/store.modern.js'\n\nclass Regionist {\n  #browserLocaleLikes = []\n  #localStorageIdentifier = '_regionist'\n  #reLocale = /[a-z]{2,3}((-|_)[a-zA-Z]{2})?/\n  #prev = null\n\n  constructor(params={}) {\n    this.timezone = params.timezone || null\n    this.country = params.country || null\n    this.nativeLanguage = params.nativeLanguage || null\n    this.preferredLanguage = params.preferredLanguage || null\n    this.locale = params.locale || null\n    this.callingCode = params.callingCode || null\n    this.currencyCode = params.currencyCode || null\n  }\n\n  guess(opts={remember: false}) {\n    this.#browserLocaleLikes = this.generateLocaleLikesFromNavigator()\n    this.timezone = this.guessTimezone()\n    this.country = this.guessCountry()\n    this.nativeLanguage = this.findNativeLanguage()\n    this.preferredLanguage = this.findPreferredLanguage()\n    this.locale = this.constructLocale()\n    this.callingCode = this.findCallingCode()\n    this.currencyCode = this.findCurrencyCode()\n\n    if (opts.remember) {\n      this.#prev = new Regionist( store.get(this.#localStorageIdentifier) )\n      store.set(this.#localStorageIdentifier, Object.keys(this).reduce((m, k) => m[k]=this[k], {}))\n    }\n\n    return this\n  }\n\n  isCountryChanged() {\n    return this.#prev.country != this.country && typeof this.country == 'string'\n  }\n\n  isTimezoneChanged() {\n    return this.#prev.timezone != this.timezone && typeof this.timezone == 'string'\n  }\n\n  findCurrencyCode() {\n    if (!this.country) return null;\n    if (!currencyCodes.hasOwnProperty(this.country)) return null;\n\n    return currencyCodes[this.country]\n  }\n\n  findCallingCode() {\n    if (!this.country) return null;\n    if (!callingCodes.hasOwnProperty(this.country)) return null;\n\n    return callingCodes[this.country]\n  }\n\n  constructLocale() {\n    return this.nativeLanguage + '_' + this.country\n  }\n\n  findPreferredLanguage() {\n    const languagesWithinhNavigator = this.#browserLocaleLikes.map(l => l.slice(0, 2))\n\n    if (languagesWithinhNavigator.length === 0) return null;\n\n    return languagesWithinhNavigator[0]\n  }\n\n  findNativeLanguage() {\n    const languagesWithinhNavigator = this.#browserLocaleLikes.map(l => l.slice(0, 2))\n\n    if (languagesWithinhNavigator.length === 0) return null;\n    if (!this.country) languagesWithinhNavigator[0]\n\n    const languagesWithinCountry = countryLanguages[this.country]\n\n    // the most suitable candidate for the native language is\n    // the language from navigator found in languagesWithinCountry\n    const possibleNativeLanguages = languagesWithinhNavigator\n      .filter(l => languagesWithinCountry.indexOf(l) !== -1)\n    if (possibleNativeLanguages && possibleNativeLanguages.length > 0) {\n      return possibleNativeLanguages[0]\n    }\n\n    // just return primary official language\n    return languagesWithinCountry[0]\n  }\n\n  guessCountry() {\n    // guess based on timezone first\n    let countriesWithinSameTimezone = []\n    if (this.timezone) {\n      const tz = this.timezone.toLowerCase()\n      countriesWithinSameTimezone = Object.keys(timezones).filter(country => {\n        const m = timezones[country].filter(_tz => _tz.toLowerCase() == tz)\n        return m && m.length > 0\n      })\n      // if there is only one just return it, we trust timezone\n      if (countriesWithinSameTimezone.length === 1) {\n        return countriesWithinSameTimezone[0]\n      }\n    }\n\n    // guess based on navigator\n    const countriesWithinNavigator = this.#browserLocaleLikes\n      .filter(l => l.indexOf('_') !== -1)\n      .map(l => l.split('_')[1])\n    \n    if (countriesWithinSameTimezone.length === 0 && countriesWithinNavigator.length > 0) {\n      return countriesWithinNavigator[0]\n    }\n\n    if (countriesWithinSameTimezone.length > 0 && countriesWithinNavigator.length === 0) {\n      // just throw first country\n      return countriesWithinSameTimezone[0]\n    }\n\n    if (countriesWithinSameTimezone.length === 0 && countriesWithinNavigator.length === 0) {\n      // impossible to guess\n      return null\n    }\n\n    const countryMatches = countriesWithinSameTimezone\n      .filter(country => countriesWithinNavigator.indexOf(country) !== -1)\n    if (countryMatches && countryMatches.length > 0) {\n      return countryMatches[0]\n    }\n\n    return countriesWithinSameTimezone[0]\n  }\n\n  guessTimezone() {\n    try {\n      return Intl.DateTimeFormat().resolvedOptions().timeZone\n    } catch (error) {\n      // Intl not supported, try jstz\n      return jstz.determine().name()\n    }\n  }\n\n  generateLocaleLikesFromNavigator() {\n    let result = []\n\n    if (!('navigator' in window)) return result\n\n    const n = window.navigator\n    if (('languages' in n) && n.languages && n.languages.length > 0) result = n.languages\n    else if (n.language) result = [n.language]\n    else if (n.userLanguage) result = [n.userLanguage]\n    else return result\n\n    return this.formatLocaleLike(result)\n  }\n\n  formatLocaleLike(value) {\n    value = Array.isArray(value) ? value : [value]\n\n    return value\n      .filter(v => {\n        return typeof v == 'string' && this.#reLocale.test(v)\n      })\n      .map(v => {\n        const arr = v.split(/(_|-)/)\n\n        if (arr.length === 1) {\n          return arr[0].toLowerCase()\n        }\n\n        if (arr.length === 3) {\n          return arr[0].toLowerCase() + '_' + arr[2].toUpperCase()\n        }\n\n        return arr[0].toLowerCase()\n      })\n  }\n\n  // picks the best language/locale from a given list\n  pick(localeLikes=[]) {\n    localeLikes = this.formatLocaleLike(localeLikes)\n    \n    // match by order: locale + country + language\n\n    // locale match\n    const matches1 = localeLikes.filter(l => this.locale == l)\n    if (matches1 && matches1.length > 0) return matches1[0]\n\n    // country match\n    const matches2 = localeLikes.filter(l => {\n      const arr = l.split('_')\n      const country = arr.length === 2 ? arr[1] : null\n      if (country && country == this.country) return true;\n      return false\n    })\n    if (matches2 && matches2.length > 0) return matches2[0]\n\n    // language\n    const matches3 = localeLikes.filter(l => {\n      const arr = l.split('_')\n      const lang = arr[0]\n      const langMatch = lang == this.nativeLanguage || lang == this.preferredLanguage\n      if (langMatch) return true;\n      return false\n    })\n    if (matches3 && matches3.length > 0) return matches3[0]\n\n    return localeLikes[0]\n  }\n\n  pickFromUrl(fallback=null) {\n    try {\n      const firstPath = window.location.pathname.split('/').filter(v => v)[0]\n      if (firstPath && this.#reLocale.test(firstPath)) {\n        return this.formatLocaleLike(firstPath)[0]\n      }\n    } catch (e) {}\n\n    return this.formatLocaleLike(fallback)[0]\n  }\n}\n\nconst regionist = new Regionist()\n\nexport {regionist, currencyCodes, callingCodes, countryLanguages, timezones} "],"names":["Regionist","params","_classCallCheck","timezone","country","nativeLanguage","preferredLanguage","locale","callingCode","currencyCode","opts","remember","_classPrivateFieldSet","generateLocaleLikesFromNavigator","guessTimezone","guessCountry","findNativeLanguage","findPreferredLanguage","constructLocale","findCallingCode","findCurrencyCode","store","get","_classPrivateFieldGet","set","_reduceInstanceProperty","_Object$keys","m","k","currencyCodes","hasOwnProperty","callingCodes","languagesWithinhNavigator","_mapInstanceProperty","l","_sliceInstanceProperty","length","languagesWithinCountry","countryLanguages","possibleNativeLanguages","_filterInstanceProperty","_indexOfInstanceProperty","countriesWithinSameTimezone","tz","toLowerCase","timezones","_tz","countriesWithinNavigator","split","countryMatches","Intl","DateTimeFormat","resolvedOptions","timeZone","error","jstz","determine","name","result","window","n","navigator","languages","language","userLanguage","formatLocaleLike","value","Array","isArray","v","test","arr","toUpperCase","localeLikes","matches1","matches2","matches3","lang","langMatch","fallback","firstPath","location","pathname","e","regionist"],"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"}