{"version":3,"file":"index.js","sources":["../../../src/Regionist.js"],"sourcesContent":["import jstz from 'locale-util/data/jstz/index.js'\nimport timezones from 'locale-util/data/extra/timezonesByCountry.json'\nimport countryLanguages from 'locale-util/data/extra/countryOfficialLanguages.json'\nimport callingCodes from 'locale-util/data/core/phoneNumberMetadata.json'\nimport currencyCodes from 'locale-util/data/extra/currencyCodesByCountry.json'\nimport store from 'store/dist/store.modern.js'\n\nclass Regionist {\n  #browserLocaleLikes = []\n  #localStorageIdentifier = '_regionist'\n  #reLocale = /[a-z]{2,3}((-|_)[a-zA-Z]{2})?/\n  #prev = null\n\n  constructor(params={}) {\n    this.timezone = params.timezone || null\n    this.country = params.country || null\n    this.nativeLanguage = params.nativeLanguage || null\n    this.preferredLanguage = params.preferredLanguage || null\n    this.locale = params.locale || null\n    this.callingCode = params.callingCode || null\n    this.currencyCode = params.currencyCode || null\n  }\n\n  guess(opts={remember: false}) {\n    this.#browserLocaleLikes = this.generateLocaleLikesFromNavigator()\n    this.timezone = this.guessTimezone()\n    this.country = this.guessCountry()\n    this.nativeLanguage = this.findNativeLanguage()\n    this.preferredLanguage = this.findPreferredLanguage()\n    this.locale = this.constructLocale()\n    this.callingCode = this.findCallingCode()\n    this.currencyCode = this.findCurrencyCode()\n\n    if (opts.remember) {\n      this.#prev = new Regionist( store.get(this.#localStorageIdentifier) )\n      store.set(this.#localStorageIdentifier, Object.keys(this).reduce((m, k) => m[k]=this[k], {}))\n    }\n\n    return this\n  }\n\n  isCountryChanged() {\n    return this.#prev.country != this.country && typeof this.country == 'string'\n  }\n\n  isTimezoneChanged() {\n    return this.#prev.timezone != this.timezone && typeof this.timezone == 'string'\n  }\n\n  findCurrencyCode() {\n    if (!this.country) return null;\n    if (!currencyCodes.hasOwnProperty(this.country)) return null;\n\n    return currencyCodes[this.country]\n  }\n\n  findCallingCode() {\n    if (!this.country) return null;\n    if (!callingCodes.hasOwnProperty(this.country)) return null;\n\n    return callingCodes[this.country]\n  }\n\n  constructLocale() {\n    return this.nativeLanguage + '_' + this.country\n  }\n\n  findPreferredLanguage() {\n    const languagesWithinhNavigator = this.#browserLocaleLikes.map(l => l.slice(0, 2))\n\n    if (languagesWithinhNavigator.length === 0) return null;\n\n    return languagesWithinhNavigator[0]\n  }\n\n  findNativeLanguage() {\n    const languagesWithinhNavigator = this.#browserLocaleLikes.map(l => l.slice(0, 2))\n\n    if (languagesWithinhNavigator.length === 0) return null;\n    if (!this.country) languagesWithinhNavigator[0]\n\n    const languagesWithinCountry = countryLanguages[this.country]\n\n    // the most suitable candidate for the native language is\n    // the language from navigator found in languagesWithinCountry\n    const possibleNativeLanguages = languagesWithinhNavigator\n      .filter(l => languagesWithinCountry.indexOf(l) !== -1)\n    if (possibleNativeLanguages && possibleNativeLanguages.length > 0) {\n      return possibleNativeLanguages[0]\n    }\n\n    // just return primary official language\n    return languagesWithinCountry[0]\n  }\n\n  guessCountry() {\n    // guess based on timezone first\n    let countriesWithinSameTimezone = []\n    if (this.timezone) {\n      const tz = this.timezone.toLowerCase()\n      countriesWithinSameTimezone = Object.keys(timezones).filter(country => {\n        const m = timezones[country].filter(_tz => _tz.toLowerCase() == tz)\n        return m && m.length > 0\n      })\n      // if there is only one just return it, we trust timezone\n      if (countriesWithinSameTimezone.length === 1) {\n        return countriesWithinSameTimezone[0]\n      }\n    }\n\n    // guess based on navigator\n    const countriesWithinNavigator = this.#browserLocaleLikes\n      .filter(l => l.indexOf('_') !== -1)\n      .map(l => l.split('_')[1])\n    \n    if (countriesWithinSameTimezone.length === 0 && countriesWithinNavigator.length > 0) {\n      return countriesWithinNavigator[0]\n    }\n\n    if (countriesWithinSameTimezone.length > 0 && countriesWithinNavigator.length === 0) {\n      // just throw first country\n      return countriesWithinSameTimezone[0]\n    }\n\n    if (countriesWithinSameTimezone.length === 0 && countriesWithinNavigator.length === 0) {\n      // impossible to guess\n      return null\n    }\n\n    const countryMatches = countriesWithinSameTimezone\n      .filter(country => countriesWithinNavigator.indexOf(country) !== -1)\n    if (countryMatches && countryMatches.length > 0) {\n      return countryMatches[0]\n    }\n\n    return countriesWithinSameTimezone[0]\n  }\n\n  guessTimezone() {\n    try {\n      return Intl.DateTimeFormat().resolvedOptions().timeZone\n    } catch (error) {\n      // Intl not supported, try jstz\n      return jstz.determine().name()\n    }\n  }\n\n  generateLocaleLikesFromNavigator() {\n    let result = []\n\n    if (!('navigator' in window)) return result\n\n    const n = window.navigator\n    if (('languages' in n) && n.languages && n.languages.length > 0) result = n.languages\n    else if (n.language) result = [n.language]\n    else if (n.userLanguage) result = [n.userLanguage]\n    else return result\n\n    return this.formatLocaleLike(result)\n  }\n\n  formatLocaleLike(value) {\n    value = Array.isArray(value) ? value : [value]\n\n    return value\n      .filter(v => {\n        return typeof v == 'string' && this.#reLocale.test(v)\n      })\n      .map(v => {\n        const arr = v.split(/(_|-)/)\n\n        if (arr.length === 1) {\n          return arr[0].toLowerCase()\n        }\n\n        if (arr.length === 3) {\n          return arr[0].toLowerCase() + '_' + arr[2].toUpperCase()\n        }\n\n        return arr[0].toLowerCase()\n      })\n  }\n\n  urlFormat(v) {\n    const arr = v.split(/(_|-)/)\n\n    if (arr.length === 1) {\n      return arr[0].toLowerCase()\n    }\n\n    if (arr.length === 3) {\n      return arr[0].toLowerCase() + '-' + arr[2].toLowerCase()\n    }\n\n    return arr[0].toLowerCase()\n  }\n\n  isoFormat(value) {\n    return this.formatLocaleLike(value)[0]\n  }\n\n  // picks the best language/locale from a given list\n  pick(localeLikes=[]) {\n    localeLikes = this.formatLocaleLike(localeLikes)\n    \n    // match by order: locale + country + language\n\n    // locale match\n    const matches1 = localeLikes.filter(l => this.locale == l)\n    if (matches1 && matches1.length > 0) return matches1[0]\n\n    // country match\n    const matches2 = localeLikes.filter(l => {\n      const arr = l.split('_')\n      const country = arr.length === 2 ? arr[1] : null\n      if (country && country == this.country) return true;\n      return false\n    })\n    if (matches2 && matches2.length > 0) return matches2[0]\n\n    // language\n    const matches3 = localeLikes.filter(l => {\n      const arr = l.split('_')\n      const lang = arr[0]\n      const langMatch = lang == this.nativeLanguage || lang == this.preferredLanguage\n      if (langMatch) return true;\n      return false\n    })\n    if (matches3 && matches3.length > 0) return matches3[0]\n\n    return localeLikes[0]\n  }\n\n  pickFromUrl(fallback=null) {\n    try {\n      const firstPath = window.location.pathname.split('/').filter(v => v)[0]\n      if (firstPath && this.#reLocale.test(firstPath)) {\n        return this.formatLocaleLike(firstPath)[0]\n      }\n    } catch (e) {}\n\n    return this.formatLocaleLike(fallback)[0]\n  }\n}\n\nconst regionist = new Regionist()\n\nexport {regionist, currencyCodes, callingCodes, countryLanguages, timezones} "],"names":["Regionist","params","timezone","country","nativeLanguage","preferredLanguage","locale","callingCode","currencyCode","opts","remember","generateLocaleLikesFromNavigator","guessTimezone","guessCountry","findNativeLanguage","findPreferredLanguage","constructLocale","findCallingCode","findCurrencyCode","store","get","set","m","k","currencyCodes","hasOwnProperty","callingCodes","languagesWithinhNavigator","l","length","languagesWithinCountry","countryLanguages","possibleNativeLanguages","countriesWithinSameTimezone","tz","toLowerCase","timezones","_tz","countriesWithinNavigator","split","countryMatches","Intl","DateTimeFormat","resolvedOptions","timeZone","error","jstz","determine","name","result","window","n","navigator","languages","language","userLanguage","formatLocaleLike","value","Array","isArray","v","test","arr","toUpperCase","localeLikes","matches1","matches2","matches3","lang","langMatch","fallback","firstPath","location","pathname","e","regionist"],"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"}